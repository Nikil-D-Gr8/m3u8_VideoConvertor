name: Build PyQt5 HLS Converter
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build-linux:
    runs-on: ubuntu-latest
    name: Build for Linux
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build Linux executable
        run: |
          pyinstaller main.py --name hls-converter-linux --onefile --noconfirm --hidden-import=sip
      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hls-converter-linux
          path: dist/hls-converter-linux
  build-windows:
    runs-on: windows-latest
    name: Build for Windows
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install FFmpeg
        run: |
          choco install ffmpeg -y
          # Refresh environment variables
          $env:PATH = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Find FFmpeg path and build Windows executable
        run: |
          # Find where choco installed FFmpeg
          $ffmpegPath = Get-Command ffmpeg | Select-Object -ExpandProperty Source
          $ffmpegDir = Split-Path $ffmpegPath -Parent
          Write-Host "FFmpeg found at: $ffmpegPath"
          Write-Host "FFmpeg directory: $ffmpegDir"
          
          # Build with onedir and bundle FFmpeg + DLLs
          pyinstaller main.py --name hls-converter-windows --onedir --windowed --noconfirm --add-binary="$ffmpegPath;." --add-binary="$ffmpegDir/*.dll;."
      - name: Create distribution zip
        run: |
          # Create a zip file of the entire distribution folder
          Compress-Archive -Path "dist\hls-converter-windows\*" -DestinationPath "hls-converter-windows.zip"
      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hls-converter-windows
          path: hls-converter-windows.zip